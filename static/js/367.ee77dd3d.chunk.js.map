{"version":3,"file":"static/js/367.ee77dd3d.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Button/buttonClasses.js","../node_modules/@mui/material/ButtonGroup/ButtonGroupContext.js","../node_modules/@mui/material/Button/Button.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js","../node_modules/rbush/rbush.min.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/ol/AssertionError.js","../node_modules/ol/Collection.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/Feature.js","../node_modules/ol/ImageBase.js","../node_modules/ol/Image.js","../node_modules/ol/ImageState.js","../node_modules/ol/ImageTile.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/layer/Group.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapEventType.js","../node_modules/ol/MapProperty.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileQueue.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/KeyCode.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/Map.js","../node_modules/ol/control/defaults.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/Object.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Observable.js","../node_modules/ol/Tile.js","../node_modules/ol/TileRange.js","../node_modules/ol/TileState.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/View.js","../node_modules/ol/ViewHint.js","../node_modules/ol/array.js","../node_modules/ol/asserts.js","../node_modules/ol/color.js","../node_modules/ol/colorlike.js","../node_modules/ol/console.js","../node_modules/ol/coordinate.js","../node_modules/ol/css.js","../node_modules/ol/dom.js","../node_modules/ol/easing.js","../node_modules/ol/events.js","../node_modules/ol/events/Event.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events/Target.js","../node_modules/ol/extent.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/functions.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/has.js","../node_modules/ol/layer/Base.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/style/Text.js","../node_modules/ol/style/flat.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/math.js","../node_modules/ol/obj.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/sphere.js","../node_modules/ol/proj.js","../node_modules/ol/render/Event.js","../node_modules/ol/render/EventType.js","../node_modules/ol/render/canvas.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/reproj/common.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/size.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/tilecoord.js","../node_modules/ol/TileCache.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/source/Tile.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/OSM.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/Source.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/featureloader.js","../node_modules/ol/source/Vector.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Fill.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/style/Icon.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/style/Image.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/style/Style.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/transform.js","../node_modules/ol/util.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiButton', slot);\n}\nconst buttonClasses = generateUtilityClasses('MuiButton', ['root', 'text', 'textInherit', 'textPrimary', 'textSecondary', 'textSuccess', 'textError', 'textInfo', 'textWarning', 'outlined', 'outlinedInherit', 'outlinedPrimary', 'outlinedSecondary', 'outlinedSuccess', 'outlinedError', 'outlinedInfo', 'outlinedWarning', 'contained', 'containedInherit', 'containedPrimary', 'containedSecondary', 'containedSuccess', 'containedError', 'containedInfo', 'containedWarning', 'disableElevation', 'focusVisible', 'disabled', 'colorInherit', 'textSizeSmall', 'textSizeMedium', 'textSizeLarge', 'outlinedSizeSmall', 'outlinedSizeMedium', 'outlinedSizeLarge', 'containedSizeSmall', 'containedSizeMedium', 'containedSizeLarge', 'sizeMedium', 'sizeSmall', 'sizeLarge', 'fullWidth', 'startIcon', 'endIcon', 'iconSizeSmall', 'iconSizeMedium', 'iconSizeLarge']);\nexport default buttonClasses;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst ButtonGroupContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  ButtonGroupContext.displayName = 'ButtonGroupContext';\n}\nexport default ButtonGroupContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"color\", \"component\", \"className\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { internal_resolveProps as resolveProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport buttonClasses, { getButtonUtilityClass } from './buttonClasses';\nimport ButtonGroupContext from '../ButtonGroup/ButtonGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    disableElevation,\n    fullWidth,\n    size,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `${variant}${capitalize(color)}`, `size${capitalize(size)}`, `${variant}Size${capitalize(size)}`, color === 'inherit' && 'colorInherit', disableElevation && 'disableElevation', fullWidth && 'fullWidth'],\n    label: ['label'],\n    startIcon: ['startIcon', `iconSize${capitalize(size)}`],\n    endIcon: ['endIcon', `iconSize${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst commonIconStyles = ownerState => _extends({}, ownerState.size === 'small' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 18\n  }\n}, ownerState.size === 'medium' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 20\n  }\n}, ownerState.size === 'large' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 22\n  }\n});\nconst ButtonRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color)}`], styles[`size${capitalize(ownerState.size)}`], styles[`${ownerState.variant}Size${capitalize(ownerState.size)}`], ownerState.color === 'inherit' && styles.colorInherit, ownerState.disableElevation && styles.disableElevation, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$palette$getCon, _theme$palette;\n  return _extends({}, theme.typography.button, {\n    minWidth: 64,\n    padding: '6px 16px',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n      duration: theme.transitions.duration.short\n    }),\n    '&:hover': _extends({\n      textDecoration: 'none',\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {\n      border: `1px solid ${(theme.vars || theme).palette[ownerState.color].main}`,\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }, ownerState.variant === 'contained' && {\n      backgroundColor: (theme.vars || theme).palette.grey.A100,\n      boxShadow: (theme.vars || theme).shadows[4],\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: (theme.vars || theme).shadows[2],\n        backgroundColor: (theme.vars || theme).palette.grey[300]\n      }\n    }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n      }\n    }),\n    '&:active': _extends({}, ownerState.variant === 'contained' && {\n      boxShadow: (theme.vars || theme).shadows[8]\n    }),\n    [`&.${buttonClasses.focusVisible}`]: _extends({}, ownerState.variant === 'contained' && {\n      boxShadow: (theme.vars || theme).shadows[6]\n    }),\n    [`&.${buttonClasses.disabled}`]: _extends({\n      color: (theme.vars || theme).palette.action.disabled\n    }, ownerState.variant === 'outlined' && {\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    }, ownerState.variant === 'contained' && {\n      color: (theme.vars || theme).palette.action.disabled,\n      boxShadow: (theme.vars || theme).shadows[0],\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    })\n  }, ownerState.variant === 'text' && {\n    padding: '6px 8px'\n  }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  }, ownerState.variant === 'outlined' && {\n    padding: '5px 15px',\n    border: '1px solid currentColor'\n  }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    border: theme.vars ? `1px solid rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : `1px solid ${alpha(theme.palette[ownerState.color].main, 0.5)}`\n  }, ownerState.variant === 'contained' && {\n    color: theme.vars ?\n    // this is safe because grey does not change between default light/dark mode\n    theme.vars.palette.text.primary : (_theme$palette$getCon = (_theme$palette = theme.palette).getContrastText) == null ? void 0 : _theme$palette$getCon.call(_theme$palette, theme.palette.grey[300]),\n    backgroundColor: (theme.vars || theme).palette.grey[300],\n    boxShadow: (theme.vars || theme).shadows[2]\n  }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n    color: (theme.vars || theme).palette[ownerState.color].contrastText,\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }, ownerState.color === 'inherit' && {\n    color: 'inherit',\n    borderColor: 'currentColor'\n  }, ownerState.size === 'small' && ownerState.variant === 'text' && {\n    padding: '4px 5px',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && ownerState.variant === 'text' && {\n    padding: '8px 11px',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.size === 'small' && ownerState.variant === 'outlined' && {\n    padding: '3px 9px',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && ownerState.variant === 'outlined' && {\n    padding: '7px 21px',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.size === 'small' && ownerState.variant === 'contained' && {\n    padding: '4px 10px',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && ownerState.variant === 'contained' && {\n    padding: '8px 22px',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.fullWidth && {\n    width: '100%'\n  });\n}, ({\n  ownerState\n}) => ownerState.disableElevation && {\n  boxShadow: 'none',\n  '&:hover': {\n    boxShadow: 'none'\n  },\n  [`&.${buttonClasses.focusVisible}`]: {\n    boxShadow: 'none'\n  },\n  '&:active': {\n    boxShadow: 'none'\n  },\n  [`&.${buttonClasses.disabled}`]: {\n    boxShadow: 'none'\n  }\n});\nconst ButtonStartIcon = styled('span', {\n  name: 'MuiButton',\n  slot: 'StartIcon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.startIcon, styles[`iconSize${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inherit',\n  marginRight: 8,\n  marginLeft: -4\n}, ownerState.size === 'small' && {\n  marginLeft: -2\n}, commonIconStyles(ownerState)));\nconst ButtonEndIcon = styled('span', {\n  name: 'MuiButton',\n  slot: 'EndIcon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.endIcon, styles[`iconSize${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inherit',\n  marginRight: -4,\n  marginLeft: 8\n}, ownerState.size === 'small' && {\n  marginRight: -2\n}, commonIconStyles(ownerState)));\nconst Button = /*#__PURE__*/React.forwardRef(function Button(inProps, ref) {\n  // props priority: `inProps` > `contextProps` > `themeDefaultProps`\n  const contextProps = React.useContext(ButtonGroupContext);\n  const resolvedProps = resolveProps(contextProps, inProps);\n  const props = useThemeProps({\n    props: resolvedProps,\n    name: 'MuiButton'\n  });\n  const {\n      children,\n      color = 'primary',\n      component = 'button',\n      className,\n      disabled = false,\n      disableElevation = false,\n      disableFocusRipple = false,\n      endIcon: endIconProp,\n      focusVisibleClassName,\n      fullWidth = false,\n      size = 'medium',\n      startIcon: startIconProp,\n      type,\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    fullWidth,\n    size,\n    type,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const startIcon = startIconProp && /*#__PURE__*/_jsx(ButtonStartIcon, {\n    className: classes.startIcon,\n    ownerState: ownerState,\n    children: startIconProp\n  });\n  const endIcon = endIconProp && /*#__PURE__*/_jsx(ButtonEndIcon, {\n    className: classes.endIcon,\n    ownerState: ownerState,\n    children: endIconProp\n  });\n  return /*#__PURE__*/_jsxs(ButtonRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(contextProps.className, classes.root, className),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other, {\n    classes: classes,\n    children: [startIcon, children, endIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'success', 'error', 'info', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, no elevation is used.\n   * @default false\n   */\n  disableElevation: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default Button;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\n\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n  let i;\n  if (direction > 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n  } else if (direction < 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n  } else {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] == target) {\n        return i;\n      } else if (arr[i] < target) {\n        if (typeof direction === 'function') {\n          if (direction(target, arr[i - 1], arr[i]) > 0) {\n            return i - 1;\n          }\n          return i;\n        } else if (arr[i - 1] - target < target - arr[i]) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.height_ = options.height;\n\n    /**\n     * Recalculate the scale if width or height where given.\n     */\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      const image = this.getImage(1);\n      const setScale = () => {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      };\n      if (image.width > 0) {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      } else {\n        image.addEventListener('load', setScale);\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n      width: this.width_,\n      height: this.height_,\n    });\n  }\n\n  /**\n   * Set the scale of the Icon by calculating it from given width and height and the\n   * width and height of the image.\n   *\n   * @private\n   * @param {number} width The width.\n   * @param {number} height The height.\n   */\n  updateScaleFromWidthAndHeight(width, height) {\n    const image = this.getImage(1);\n    if (width !== undefined && height !== undefined) {\n      super.setScale([width / image.width, height / image.height]);\n    } else if (width !== undefined) {\n      super.setScale([width / image.width, width / image.width]);\n    } else if (height !== undefined) {\n      super.setScale([height / image.height, height / image.height]);\n    } else {\n      super.setScale([1, 1]);\n    }\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels).\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Get the height of the icon (in pixels).\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    return this.height_;\n  }\n\n  /**\n   * Set the width of the icon in pixels.\n   *\n   * @param {number} width The width to set.\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.updateScaleFromWidthAndHeight(width, this.height_);\n  }\n\n  /**\n   * Set the height of the icon in pixels.\n   *\n   * @param {number} height The height to set.\n   */\n  setHeight(height) {\n    this.height_ = height;\n    this.updateScaleFromWidthAndHeight(this.width_, height);\n  }\n\n  /**\n   * Set the scale and updates the width and height correspondingly.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @override\n   * @api\n   */\n  setScale(scale) {\n    super.setScale(scale);\n    const image = this.getImage(1);\n    if (image) {\n      const widthScale = Array.isArray(scale) ? scale[0] : scale;\n      if (widthScale !== undefined) {\n        this.width_ = widthScale * image.width;\n      }\n      const heightScale = Array.isArray(scale) ? scale[1] : scale;\n      if (heightScale !== undefined) {\n        this.height_ = heightScale * image.height;\n      }\n    }\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.2.2';\n"],"names":["getButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","React","_excluded","commonIconStyles","ownerState","_extends","size","fontSize","ButtonRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","root","variant","capitalize","color","colorInherit","disableElevation","fullWidth","_theme$palette$getCon","_theme$palette","theme","typography","button","minWidth","padding","borderRadius","vars","shape","transition","transitions","create","duration","short","textDecoration","backgroundColor","palette","text","primaryChannel","action","hoverOpacity","alpha","primary","mainChannel","main","border","grey","A100","boxShadow","shadows","dark","buttonClasses","disabled","disabledBackground","getContrastText","call","contrastText","borderColor","pxToRem","width","ButtonStartIcon","startIcon","display","marginRight","marginLeft","ButtonEndIcon","endIcon","inProps","ref","contextProps","ButtonGroupContext","resolvedProps","resolveProps","useThemeProps","children","component","className","disableFocusRipple","endIconProp","focusVisibleClassName","startIconProp","type","other","_objectWithoutPropertiesLoose","classes","slots","label","composedClasses","composeClasses","useUtilityClasses","_jsx","_jsxs","clsx","focusRipple","focusVisible","getCircularProgressUtilityClass","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","style","thickness","value","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","height","role","viewBox","cx","cy","r","fill","strokeWidth","getLinkUtilityClass","colorTransformations","textPrimary","secondary","textSecondary","error","transformedColor","transformDeprecatedColors","getPath","channelColor","LinkRoot","Typography","underline","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","outline","margin","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","onBlur","onFocus","TypographyClasses","sx","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","setFocusVisible","handlerRef","useForkRef","event","current","Object","keys","includes","Array","isArray","module","exports","t","e","a","h","n","o","s","l","log","f","exp","u","sqrt","max","floor","min","p","d","x","i","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","minX","minY","maxX","maxY","leaf","m","c","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","_superPropBase","object","property","hasOwnProperty","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","messages","AssertionError","code","message","Error","Property","CollectionEvent","element","index","Event","Collection","array","options","on","once","un","unique_","unique","array_","ii","assertUnique_","updateLength_","getLength","arr","elem","dispatchEvent","CollectionEventType","removeAt","insertAt","prev","set","except","BaseObject","ADD","REMOVE","Disposable","disposed","disposeInternal","Feature","geometryOrProperties","id_","undefined","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","changed","unlistenByKey","listen","EventType","handleGeometryChange_","obj","assert","getZIndex","createStyleFunction","id","removeChangeListener","EventTarget","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","listenOnce","src","IMAGE_DECODE","decode","then","catch","forEach","IDLE","LOADING","LOADED","ERROR","EMPTY","ImageTile","tileCoord","state","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","image_","Image","unlisten_","tileLoadFunction_","TileState","unlistenImage_","ctx","createCanvasContext2D","fillStyle","fillRect","canvas","getBlankImage","naturalWidth","naturalHeight","handleImageLoad_","handleImageError_","Tile","expireIconCache","map","frameState","iconImageCache","MapRenderer","map_","abstract","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","resolution","rotation","center","makeInverse","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","forEachFeatureAtCoordinate","managed","feature","layer","projection","translatedCoordinate","wrapX","offsets","canWrapX","projectionExtent","getExtent","worldWidth","getWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","inView","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","b","some","TRUE","postRenderFunctions","CompositeMapRenderer","fontChangeListenerKey_","checkedFonts","ObjectEventType","redrawText","element_","document","createElement","zIndex","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","getMap","hasListener","RenderEvent","parentNode","removeChild","calculateMatrices2D","dispatchRenderEvent","RenderEventType","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","renderDeclutter","replaceChildren","scheduleExpireIconCache","GroupEvent","LayerGroup","baseOptions","assign","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","getArray","setLayers","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerChange_","handleLayerGroupAdd_","handleLayerGroupRemove_","getUid","collectionEvent","collection","currentLayers","getLayersArray","dest","states","pos","getLayerStatesArray","ownLayerState","getLayerState","defaultZIndex","opacity","visible","maxResolution","minResolution","minZoom","maxZoom","extent","getIntersection","BaseLayer","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","pixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","addEventListener","PASSIVE_EVENT_LISTENERS","passive","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","pointerId","values","updateActivePointers_","defaultPrevented","isMouseActionButton_","emulateClick_","VOID","doc","getOwnerDocument","handlePointerMove_","handlePointerUp_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","removeEventListener","Target","DROP","Infinity","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","isKeyQueued","count","startIndex","lIndex","getLeftChildIndex_","rIndex","getRightChildIndex_","smallerChildIndex","parentIndex","getParentIndex_","heapify_","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getState","tileKey","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","Control","pointerEvents","target_","setTarget","removeNode","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","String","title","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","jj","setCollapsible","collectSourceAttributions_","equals","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","updateElement_","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","CLASS_HIDDEN","resetNorth_","view","getView","getRotation","animate","easing","easeOut","setRotation","contains","Zoom","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","zoomByDelta","anchor","newResolution","getResolutionForZoom","Interaction","handleEvent","setActive","InteractionProperty","mapBrowserEvent","active","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","centroid","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","updateTrackedPointers_","handledUp","handled","var_args","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","focus","always","mouseActionButton","WEBKIT","MAC","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","FALSE","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","getResolution","rotateCoordinate","adjustCenterInternal","begin","end","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","DragRotate","lastAngle_","getConstraints","disable","getSize","offset","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","setMap","startPixel","endPixel","px","left","top","getOverlayContainer","createOrUpdateGeometry","render_","setCoordinates","Polygon","DragBoxEventType","DragBoxEvent","DragZoom","minArea","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","scale","fitInternal","DragBox","box_","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","setPixels","completeBox","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","deltaX","deltaY","currentCenter","linear","pan","KeyboardZoom","charCode","charCodeAt","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","Date","now","lastIndex","firstIndex","dx","dy","MouseWheelZoom","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DEVICE_PIXEL_RATIO","DOM_DELTA_LINE","getConstrainResolution","endInteraction_","adjustZoom","timeLeft","handleWheelZoom_","clamp","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","Map","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","createTransform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attribution","attributionOptions","defaultControls","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","defaultInteractions","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","getControls","getInteractions","getLayerGroup","overlay","getOverlays","disconnect","features","forEachFeatureAtPixel","addLayersFrom","hasFeatureAtCoordinate","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","toUserCoordinate","getProjection","applyTransform","group","extend","renderer","ready","loading","viewCoordinate","fromUserCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","getActive","propagationStopped","tileQueue","isEmpty","hints","viewHints","ViewHint","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","resolveConstraints","dispose","unobserve","ShadowRoot","host","getTarget","observe","cancelAnimationFrame","updateViewportSize_","handleViewPropertyChanged_","handleLayerAdd_","handleLayerRemove_","renderFrame_","handleFontsChanged","requestAnimationFrame","previousFrameState","hasArea","isDef","getHints","declutterTree","getForViewAndSize","usedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","renderFrame","equalsExtent","createOrUpdateEmpty","getLoadingOrNotReady","handlePostRender","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","setSize","parseInt","setViewportSize","ObjectEvent","oldValue","values_","listener","silent","notify","Observable","PROPERTYCHANGE","onInternal","onceInternal","unInternal","revision_","len","ol_key","unByKey","interimTile","transition_","transitionStarts_","interpolate","setState","start","easeIn","TileRange","containsXY","tileRange","getHeight","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","fromUserExtent","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","linearFindNearest","createSnapToResolutions","defaultMaxResolution","METERS_PER_UNIT","getMetersPerUnit","DEFAULT_TILE_SIZE","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","rotationNone","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","getCenter","newPadding","offsetX","offsetY","newOptions","args","animationCount","series","animation","complete","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","modulo","targetRotation","isNoopAnimation","setHint","updateAnimations_","animationCallback","NaN","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","addCoordinate","currentResolution","w","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getZoomForResolution","getUpdatedOptions_","enabled","getConstrainedResolution","logPower","reducedSize","calculateCenterOn","nearest","baseLevel","geometryOrExtent","polygonFromExtent","getType","userProjection","getUserProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOnInternal","shiftedCenter","deltaCoordinates","setCenter","getInteracting","adjustResolution","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","calculateCenterShift","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","coordinatesEqual","ANIMATING","INTERACTING","ascending","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorCode","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","el","body","rgb","fromString","cache","cacheSize","g","exec","hasAlpha","substr","startsWith","normalize","split","Number","fromStringInternal_","asArray","asColorLike","levels","info","level","console","coordinate1","coordinate2","worldsAway","sourceExtentWidth","getWorldsAway","fontRegEx","RegExp","join","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","families","family","canvasPool","settings","shift","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","newNode","oldNode","parent","replaceChild","node","lastChild","oldChildren","childNodes","oldChild","newChild","originalListener","eventsKey","BaseEvent","CHANGE","BLUR","CLEAR","CONTEXTMENU","DRAGENTER","DRAGOVER","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","isString","evt","propagate","dispatching","pendingRemovals","pr","boundingExtent","createEmpty","extendCoordinate","buffer","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getRotatedViewport","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","intersection","intersects","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","Point","layout","point","applyProperties","closestPoint","minSquaredDistance","squaredDistance","squaredDx","setLayout","deflateCoordinate","SimpleGeometry","assignClosest","offset1","offset2","lerp","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","linearRing","twiceArea","linearRings","LinearRing","maxDeltaRevision_","setFlatCoordinates","getRevision","linearRingArea","inflateCoordinates","squaredTolerance","simplifiedFlatCoordinates","douglasPeucker","deflateCoordinates","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","linearRingsContainsXY","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","polygon","getOrientedFlatCoordinates","linearRingsArea","inflateCoordinatesArray","flatCenter","getFlatInteriorPoint","simplifiedEnds","quantizeArray","intersectsLinearRingArray","deflateCoordinatesArray","fromExtent","tmpTransform","getStrideForLayout","transformGeom2D","simpleGeometry","transform2D","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","getSimplifiedGeometryInternal","nesting","getLayoutForStride","sy","translate","Geometry","extent_","extentRevision_","simplifyTransformedInternal","revision","coord","getClosestPoint","closestPointXY","computeExtent","tolerance","destination","sourceProj","getUnits","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","getTransform","linearRingContainsExtent","linearRingContainsXY","wn","coordinatess","inflateMultiCoordinatesArray","endss","coordinatesss","intersectsLineString","coordinatesExtent","ret","forEachSegment","point1","point2","intersectsLinearRing","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredSegmentDistance","snap","quantize","dx1","dy1","dx2","dy2","anchorX","anchorY","k","ua","navigator","userAgent","toLowerCase","test","devicePixelRatio","WorkerGlobalScope","self","defineProperty","background_","background","LayerProperty","className_","state_","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","zindex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","handleSourceChange_","getFeatures","Promise","resolve","getData","prepareFrame","arrayLayerState","createRenderer","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","TileProperty","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","getLayer","tileState","getUseInterimTilesOnError","getTile","getPreload","isDrawableTile","getInterimTile","layerExtent","getRenderSource","tileGrid","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getZForResolution","getTileCoordForCoordAndZ","ReprojTile","tileOrigin","getOrigin","tileSize","toSize","getTileSize","col","row","gutter","getGutterForProjection","getImageData","getImage","tiles","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","inTransition","endTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","pixelTransform","canvasTransform","toTransformString","useContainer","getBackground","inversePixelTransform","tempTransform","containerReused","clipUnrotated","getInterpolate","imageSmoothingEnabled","preRender","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","getTileCoordExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","clip","save","beginPath","moveTo","lineTo","drawTileImage","restore","unshift","updateUsedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","getTileImage","alphaChanged","globalAlpha","drawImage","canExpireCache","postRenderFunction","expireCache","tileCallback","tileCount","enqueue","getTileCoordCenter","useTile","updateCacheSize","CanvasLayerRenderer","TileLayer","Text","font_","font","rotateWithView_","rotateWithView","scale_","scaleArray_","text_","textAlign_","textAlign","justify_","justify","textBaseline_","textBaseline","fill_","Fill","maxAngle_","maxAngle","placement_","placement","overflow_","stroke_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getScale","getFont","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getText","getTextAlign","getJustify","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","toStyle","flatStyle","Style","prefix","Stroke","lineCap","lineJoin","lineDash","lineDashOffset","miterLimit","iconSrc","iconImg","Icon","imgSize","anchorOrigin","anchorXUnits","anchorYUnits","displacement","declutterMode","shapePoints","RegularShape","points","radius","radius1","radius2","circleRadius","Circle","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","RBush","renderOrder","styleLike","createDefaultStyle","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","strokeStyle","imageStyle","declutterImageWithText","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","dashArray","dash","getBufferedMaxExtent","myEnd","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","builderEnds","builderEnd","appendFlatLineCoordinates","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","drawCustomCoordinates_","CanvasInstruction","getEnds","appendFlatPointCoordinates","endGeometry","instruction","fillStyleColor","getColor","defaultFillStyle","strokeStyleColor","defaultStrokeStyle","strokeStyleLineCap","getLineCap","defaultLineCap","strokeStyleLineDash","getLineDash","defaultLineDash","strokeStyleLineDashOffset","getLineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","getLineJoin","defaultLineJoin","strokeStyleWidth","lineWidth","defaultLineWidth","strokeStyleMiterLimit","getMiterLimit","defaultMiterLimit","createStroke","applyPixelRatio","createFill","currentFillStyle","applyStroke","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","width_","declutterMode_","declutterImageWithText_","myBegin","reverseHitDetectionInstructions","sharedData","getAnchor","getPixelRatio","getHitDetectionImage","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","moveToLineToInstruction","updateStrokeStyle","drawFlatCoordinates_","lastStroke","CanvasPolygonBuilder","numEnds","setFillStrokeStyles_","circleInstruction","drawFlatCoordinatess_","updateFillStyle","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg","keep","saveTextStates_","setFillStrokeStyle","defaultPadding","p0","p1","p2","p3","flatEnd","flatOffset","oo","range","drawChars_","strokeKey","textKey","defaultTextAlign","defaultTextBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","defaultFont","registerFont","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","finish","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","replace","iStart","charLength","chars","substring","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","textIsArray","chunks","reduce","getTextDimensions","widths","heights","lineWidths","renderWidth","contextInstructions","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","setStrokeStyle_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","contextScale","imageOrLabel","dimensions","box","strokePadding","replayTextBackground_","drawImageOrLabel","repeatSize","setLineDash","createLabel","featureCallback","hitExtent","pixelCoordinates","transformSetFromArray","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","arc","closePath","labelWithAnchor","drawLabelWithPointPlacement_","widthIndex","calculateImageOrLabelDimensions_","imageArgs","imageDeclutterBox","replayImageOrLabel_","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","execute_","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","willReadFrequently","indexes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","idx","executor","executeHitDetection","builderTypes","execute","CanvasImmediateRenderer","userTransform","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","localTransform","setTransform","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","close","moveToLineTo_","drawText_","setImageStyle","setTextStyle","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawCircle","getGeometryFunction","drawGeometry","geometries","getGeometriesArray","simplifyTransformed","drawImages_","flatMidpoint","geometryExtent","flatMidpoints","drawRings_","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","getImageState","ImageState","imageBuilderGroup","imageReplay","getBuilder","textBuilderGroup","textReplay","drawText","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","imageState","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","drawCustom","getHitDetectionRenderer","getGeometries","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","executorGroup","vectorSource","endWorld","world","getRenderTransform","compositionContext","setupCompositionContext_","renderWorlds","releaseCompositionContext_","makeScale","transformToString","clipped","intersectsExtent","transforms","styleFunction","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","padStart","originalStyle","setColor","setText","getImageSize","imgContext","setImage","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","executorGroups","item","renderIfReadyAndVisible","animating","interacting","getUpdateWhileAnimating","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","getDeclutter","userExtent","loadFeatures","toUserResolution","getTransformFromProjections","getSquaredRenderTolerance","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","decimals","Projection","code_","units_","units","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","EPSG4326Projection","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","pointResolution","getter","getPointResolutionFunc","projUnits","vertices","addEquivalentProjections","projections","addProjections","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","transformExtent","destProjection","sourceUnits","userUnits","projections2","forwardTransform","inverseTransform","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","addCommon","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","measureFont","measureContext","textHeights","interval","referenceWidth","referenceFonts","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","getKeys","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","curr","baseStyle","currentWidth","currentHeight","labelOrImage","executeLabelInstructions","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","forEachLoadedTile","pixelContext","pixelContext_","err","layerClassName","getClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","brokenDiagonalRendering_","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","addTriangle_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","renderEdges","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","ud","vd","step","steps","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","reproject_","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","entry","value_","key_","newer","older","containsKey","getKeyZXY","TileCache","release","peekLast","fromKey","peekFirstKey","tmpTileCoord","TileGrid","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","getForProjection","getDefaultTileGrid","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","setDefaultTileGrid","DEFAULT_MAX_ZOOM","half","TileSource","attributionsCollapsible","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","getResolutions","scaleSize","getFullTileRange","withinExtentAndZ","Source","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","defaultTileLoadFunction","imageTile","OSM","url","reprojectionErrorThreshold","XYZ","xyzOptions","gridOptions","createXYZ","tileUrlFunction","urls","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","getTileInternal","newTile","refreshInterimChain","createTile_","tilegrid","proj","UrlTile","generateTileUrlFunction_","setUrls","setUrl","tileLoadingKeys_","TileEventType","pruneExceptNewestZ","setKey","startCharCode","stopCharCode","stop","expandUrl","setTileUrlFunction","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","reject","attributionLike","maxEntries","rbush_","RBush_","items_","extents","items","bbox","forEach_","getAll","getInExtent","rbush","withCredentials","xhr","format","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","VectorSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","addFeature","removeFeature","fast","featureId","removeFeatureInternal","clearEvent","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureAtCoordinateDirect","concat","anExtent","closestFeature","previousMinSquaredDistance","minDistance","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","setLoader","CircleStyle","getRadius","getDisplacement","setOpacity","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","dispatchChangeEvent_","initializeImage_","replaceColor_","isTainted_","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","imgSize_","iconImage_","iconImage","getIconImage","offset_","offsetOrigin_","offsetOrigin","updateScaleFromWidthAndHeight","getSrc","iconImageSize","widthScale","heightScale","ImageStyle","IconImageCache","cache_","cacheSize_","maxCacheSize_","maxCacheSize","expire","shared","displacement_","hitDetectionCanvas_","radius2_","renderOptions_","getPoints","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","calculateLineJoinSize_","maxRadius","createRenderOptions","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","toFunction","defaultStyles","transformStringDiv","setFromArray","transform1","transform2","compose","det","transformString","uidCounter_","ol_uid"],"sourceRoot":""}