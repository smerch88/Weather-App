{"version":3,"file":"static/js/653.fa7b98a0.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js","../node_modules/rbush/rbush.min.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/ol/AssertionError.js","../node_modules/ol/Collection.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/Feature.js","../node_modules/ol/ImageBase.js","../node_modules/ol/Image.js","../node_modules/ol/ImageState.js","../node_modules/ol/ImageTile.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/layer/Group.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapEventType.js","../node_modules/ol/MapProperty.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileQueue.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/KeyCode.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/Map.js","../node_modules/ol/control/defaults.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/Object.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Observable.js","../node_modules/ol/Tile.js","../node_modules/ol/TileRange.js","../node_modules/ol/TileState.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/View.js","../node_modules/ol/ViewHint.js","../node_modules/ol/array.js","../node_modules/ol/asserts.js","../node_modules/ol/color.js","../node_modules/ol/colorlike.js","../node_modules/ol/console.js","../node_modules/ol/coordinate.js","../node_modules/ol/css.js","../node_modules/ol/dom.js","../node_modules/ol/easing.js","../node_modules/ol/events.js","../node_modules/ol/events/Event.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events/Target.js","../node_modules/ol/extent.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/functions.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/has.js","../node_modules/ol/layer/Base.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/style/Text.js","../node_modules/ol/style/flat.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/math.js","../node_modules/ol/obj.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/sphere.js","../node_modules/ol/proj.js","../node_modules/ol/render/Event.js","../node_modules/ol/render/EventType.js","../node_modules/ol/render/canvas.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/reproj/common.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/size.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/tilecoord.js","../node_modules/ol/TileCache.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/source/Tile.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/OSM.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/Source.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/featureloader.js","../node_modules/ol/source/Vector.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Fill.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/style/Icon.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/style/Image.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/style/Style.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/transform.js","../node_modules/ol/util.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\n\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n  let i;\n  if (direction > 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n  } else if (direction < 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n  } else {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] == target) {\n        return i;\n      } else if (arr[i] < target) {\n        if (typeof direction === 'function') {\n          if (direction(target, arr[i - 1], arr[i]) > 0) {\n            return i - 1;\n          }\n          return i;\n        } else if (arr[i - 1] - target < target - arr[i]) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.height_ = options.height;\n\n    /**\n     * Recalculate the scale if width or height where given.\n     */\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      const image = this.getImage(1);\n      const setScale = () => {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      };\n      if (image.width > 0) {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      } else {\n        image.addEventListener('load', setScale);\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n      width: this.width_,\n      height: this.height_,\n    });\n  }\n\n  /**\n   * Set the scale of the Icon by calculating it from given width and height and the\n   * width and height of the image.\n   *\n   * @private\n   * @param {number} width The width.\n   * @param {number} height The height.\n   */\n  updateScaleFromWidthAndHeight(width, height) {\n    const image = this.getImage(1);\n    if (width !== undefined && height !== undefined) {\n      super.setScale([width / image.width, height / image.height]);\n    } else if (width !== undefined) {\n      super.setScale([width / image.width, width / image.width]);\n    } else if (height !== undefined) {\n      super.setScale([height / image.height, height / image.height]);\n    } else {\n      super.setScale([1, 1]);\n    }\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels).\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Get the height of the icon (in pixels).\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    return this.height_;\n  }\n\n  /**\n   * Set the width of the icon in pixels.\n   *\n   * @param {number} width The width to set.\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.updateScaleFromWidthAndHeight(width, this.height_);\n  }\n\n  /**\n   * Set the height of the icon in pixels.\n   *\n   * @param {number} height The height to set.\n   */\n  setHeight(height) {\n    this.height_ = height;\n    this.updateScaleFromWidthAndHeight(this.width_, height);\n  }\n\n  /**\n   * Set the scale and updates the width and height correspondingly.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @override\n   * @api\n   */\n  setScale(scale) {\n    super.setScale(scale);\n    const image = this.getImage(1);\n    if (image) {\n      const widthScale = Array.isArray(scale) ? scale[0] : scale;\n      if (widthScale !== undefined) {\n        this.width_ = widthScale * image.width;\n      }\n      const heightScale = Array.isArray(scale) ? scale[1] : scale;\n      if (heightScale !== undefined) {\n        this.height_ = heightScale * image.height;\n      }\n    }\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.2.2';\n"],"names":["getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","theme","_extends","display","transition","transitions","create","vars","palette","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","React","inProps","ref","useThemeProps","className","size","style","thickness","value","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","width","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","getLinkUtilityClass","colorTransformations","primary","textPrimary","secondary","textSecondary","error","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","LinkRoot","Typography","underline","component","button","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","onBlur","onFocus","TypographyClasses","sx","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","event","current","Object","keys","includes","Array","isArray","module","exports","t","e","a","h","n","o","s","l","log","f","exp","u","sqrt","max","floor","min","p","d","x","i","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","minX","minY","maxX","maxY","leaf","m","c","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","_superPropBase","object","property","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","messages","AssertionError","code","message","Error","Property","CollectionEvent","type","element","index","Event","Collection","array","options","on","once","un","unique_","unique","array_","ii","assertUnique_","updateLength_","getLength","arr","elem","dispatchEvent","CollectionEventType","removeAt","insertAt","prev","set","except","BaseObject","ADD","REMOVE","Disposable","disposed","disposeInternal","Feature","geometryOrProperties","id_","undefined","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","changed","unlistenByKey","listen","EventType","handleGeometryChange_","obj","assert","getZIndex","createStyleFunction","id","removeChangeListener","EventTarget","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","listenOnce","src","IMAGE_DECODE","decode","then","catch","forEach","IDLE","LOADING","LOADED","ERROR","EMPTY","ImageTile","tileCoord","state","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","image_","Image","unlisten_","tileLoadFunction_","TileState","unlistenImage_","ctx","createCanvasContext2D","fillStyle","fillRect","canvas","getBlankImage","naturalWidth","naturalHeight","handleImageLoad_","handleImageError_","Tile","expireIconCache","map","frameState","iconImageCache","MapRenderer","map_","abstract","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","resolution","rotation","center","makeInverse","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","forEachFeatureAtCoordinate","managed","feature","layer","projection","translatedCoordinate","wrapX","offsets","canWrapX","projectionExtent","getExtent","worldWidth","getWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","inView","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","b","some","TRUE","postRenderFunctions","CompositeMapRenderer","fontChangeListenerKey_","checkedFonts","ObjectEventType","redrawText","element_","document","createElement","zIndex","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","getMap","hasListener","RenderEvent","parentNode","removeChild","calculateMatrices2D","dispatchRenderEvent","RenderEventType","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","renderDeclutter","replaceChildren","scheduleExpireIconCache","GroupEvent","LayerGroup","baseOptions","assign","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","getArray","setLayers","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerChange_","handleLayerGroupAdd_","handleLayerGroupRemove_","getUid","collectionEvent","collection","currentLayers","getLayersArray","dest","states","pos","getLayerStatesArray","ownLayerState","getLayerState","defaultZIndex","opacity","visible","maxResolution","minResolution","minZoom","maxZoom","extent","getIntersection","BaseLayer","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","pixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","addEventListener","PASSIVE_EVENT_LISTENERS","passive","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","pointerId","values","updateActivePointers_","defaultPrevented","isMouseActionButton_","emulateClick_","VOID","doc","getOwnerDocument","handlePointerMove_","handlePointerUp_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","removeEventListener","Target","DROP","Infinity","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","isKeyQueued","count","startIndex","lIndex","getLeftChildIndex_","rIndex","getRightChildIndex_","smallerChildIndex","parentIndex","getParentIndex_","heapify_","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getState","tileKey","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","Control","pointerEvents","target_","setTarget","removeNode","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","String","title","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","jj","setCollapsible","collectSourceAttributions_","equals","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","updateElement_","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","CLASS_HIDDEN","resetNorth_","view","getView","getRotation","animate","easing","easeOut","setRotation","contains","Zoom","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","zoomByDelta","anchor","newResolution","getResolutionForZoom","Interaction","handleEvent","setActive","InteractionProperty","mapBrowserEvent","active","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","centroid","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","updateTrackedPointers_","handledUp","handled","var_args","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","focus","always","mouseActionButton","WEBKIT","MAC","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","FALSE","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","getResolution","rotateCoordinate","adjustCenterInternal","begin","end","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","DragRotate","lastAngle_","getConstraints","disable","getSize","offset","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","setMap","startPixel","endPixel","px","left","top","getOverlayContainer","createOrUpdateGeometry","render_","setCoordinates","Polygon","DragBoxEventType","DragBoxEvent","DragZoom","minArea","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","scale","fitInternal","DragBox","box_","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","setPixels","completeBox","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","deltaX","deltaY","currentCenter","linear","pan","KeyboardZoom","charCode","charCodeAt","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","Date","now","lastIndex","firstIndex","dx","dy","MouseWheelZoom","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DEVICE_PIXEL_RATIO","DOM_DELTA_LINE","getConstrainResolution","endInteraction_","adjustZoom","timeLeft","handleWheelZoom_","clamp","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","Map","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","createTransform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attribution","attributionOptions","defaultControls","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","defaultInteractions","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","getControls","getInteractions","getLayerGroup","overlay","getOverlays","disconnect","features","forEachFeatureAtPixel","addLayersFrom","hasFeatureAtCoordinate","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","toUserCoordinate","getProjection","applyTransform","group","extend","renderer","ready","loading","viewCoordinate","fromUserCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","getActive","propagationStopped","tileQueue","isEmpty","hints","viewHints","ViewHint","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","resolveConstraints","dispose","unobserve","ShadowRoot","host","getTarget","observe","cancelAnimationFrame","updateViewportSize_","handleViewPropertyChanged_","handleLayerAdd_","handleLayerRemove_","renderFrame_","handleFontsChanged","requestAnimationFrame","previousFrameState","hasArea","isDef","getHints","declutterTree","getForViewAndSize","usedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","renderFrame","equalsExtent","createOrUpdateEmpty","getLoadingOrNotReady","handlePostRender","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","setSize","parseInt","setViewportSize","ObjectEvent","oldValue","values_","listener","silent","notify","Observable","PROPERTYCHANGE","onInternal","onceInternal","unInternal","revision_","len","ol_key","unByKey","interimTile","transition_","transitionStarts_","interpolate","setState","start","easeIn","TileRange","containsXY","tileRange","getHeight","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","fromUserExtent","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","linearFindNearest","createSnapToResolutions","defaultMaxResolution","METERS_PER_UNIT","getMetersPerUnit","DEFAULT_TILE_SIZE","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","rotationNone","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","getCenter","newPadding","offsetX","offsetY","newOptions","args","animationCount","series","animation","complete","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","modulo","targetRotation","isNoopAnimation","setHint","updateAnimations_","animationCallback","NaN","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","addCoordinate","currentResolution","w","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getZoomForResolution","getUpdatedOptions_","enabled","getConstrainedResolution","logPower","reducedSize","calculateCenterOn","nearest","baseLevel","geometryOrExtent","polygonFromExtent","getType","userProjection","getUserProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOnInternal","shiftedCenter","deltaCoordinates","setCenter","getInteracting","adjustResolution","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","calculateCenterShift","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","coordinatesEqual","ANIMATING","INTERACTING","ascending","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorCode","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","el","body","rgb","fromString","cache","cacheSize","g","exec","hasAlpha","substr","startsWith","normalize","split","Number","fromStringInternal_","asArray","asColorLike","levels","info","level","console","coordinate1","coordinate2","worldsAway","sourceExtentWidth","getWorldsAway","fontRegEx","RegExp","join","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","families","family","canvasPool","settings","shift","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","newNode","oldNode","parent","replaceChild","node","lastChild","oldChildren","childNodes","oldChild","newChild","originalListener","eventsKey","BaseEvent","CHANGE","BLUR","CLEAR","CONTEXTMENU","DRAGENTER","DRAGOVER","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","isString","evt","propagate","dispatching","pendingRemovals","pr","boundingExtent","createEmpty","extendCoordinate","buffer","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getRotatedViewport","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","intersection","intersects","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","Point","layout","point","applyProperties","closestPoint","minSquaredDistance","squaredDistance","squaredDx","setLayout","deflateCoordinate","SimpleGeometry","assignClosest","offset1","offset2","lerp","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","linearRing","twiceArea","linearRings","LinearRing","maxDeltaRevision_","setFlatCoordinates","getRevision","linearRingArea","inflateCoordinates","squaredTolerance","simplifiedFlatCoordinates","douglasPeucker","deflateCoordinates","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","linearRingsContainsXY","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","polygon","getOrientedFlatCoordinates","linearRingsArea","inflateCoordinatesArray","flatCenter","getFlatInteriorPoint","simplifiedEnds","quantizeArray","intersectsLinearRingArray","deflateCoordinatesArray","fromExtent","tmpTransform","getStrideForLayout","transformGeom2D","simpleGeometry","transform2D","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","getSimplifiedGeometryInternal","nesting","getLayoutForStride","sy","translate","Geometry","extent_","extentRevision_","simplifyTransformedInternal","revision","coord","getClosestPoint","closestPointXY","computeExtent","tolerance","destination","sourceProj","getUnits","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","getTransform","linearRingContainsExtent","linearRingContainsXY","wn","coordinatess","inflateMultiCoordinatesArray","endss","coordinatesss","intersectsLineString","coordinatesExtent","ret","forEachSegment","point1","point2","intersectsLinearRing","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredSegmentDistance","snap","quantize","dx1","dy1","dx2","dy2","anchorX","anchorY","k","ua","navigator","userAgent","toLowerCase","test","devicePixelRatio","WorkerGlobalScope","self","defineProperty","background_","background","LayerProperty","className_","state_","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","zindex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","handleSourceChange_","getFeatures","Promise","resolve","getData","prepareFrame","arrayLayerState","createRenderer","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","TileProperty","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","getLayer","tileState","getUseInterimTilesOnError","getTile","getPreload","isDrawableTile","getInterimTile","layerExtent","getRenderSource","tileGrid","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getZForResolution","getTileCoordForCoordAndZ","ReprojTile","tileOrigin","getOrigin","tileSize","toSize","getTileSize","col","row","gutter","getGutterForProjection","getImageData","getImage","tiles","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","inTransition","endTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","pixelTransform","canvasTransform","toTransformString","useContainer","getBackground","inversePixelTransform","tempTransform","containerReused","clipUnrotated","getInterpolate","imageSmoothingEnabled","preRender","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","getTileCoordExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","clip","save","beginPath","moveTo","lineTo","drawTileImage","restore","unshift","updateUsedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","getTileImage","alphaChanged","globalAlpha","drawImage","canExpireCache","postRenderFunction","expireCache","tileCallback","tileCount","enqueue","getTileCoordCenter","useTile","updateCacheSize","CanvasLayerRenderer","TileLayer","Text","font_","font","rotateWithView_","rotateWithView","scale_","scaleArray_","text_","text","textAlign_","textAlign","justify_","justify","textBaseline_","textBaseline","fill_","Fill","maxAngle_","maxAngle","placement_","placement","overflow_","stroke_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getScale","getFont","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getText","getTextAlign","getJustify","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","toStyle","flatStyle","Style","prefix","Stroke","lineCap","lineJoin","lineDash","lineDashOffset","miterLimit","iconSrc","iconImg","Icon","imgSize","anchorOrigin","anchorXUnits","anchorYUnits","displacement","declutterMode","shapePoints","RegularShape","points","radius","radius1","radius2","circleRadius","Circle","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","RBush","renderOrder","styleLike","createDefaultStyle","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","strokeStyle","imageStyle","declutterImageWithText","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","dashArray","dash","getBufferedMaxExtent","myEnd","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","builderEnds","builderEnd","appendFlatLineCoordinates","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","drawCustomCoordinates_","CanvasInstruction","getEnds","appendFlatPointCoordinates","endGeometry","instruction","fillStyleColor","getColor","defaultFillStyle","strokeStyleColor","defaultStrokeStyle","strokeStyleLineCap","getLineCap","defaultLineCap","strokeStyleLineDash","getLineDash","defaultLineDash","strokeStyleLineDashOffset","getLineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","getLineJoin","defaultLineJoin","strokeStyleWidth","lineWidth","defaultLineWidth","strokeStyleMiterLimit","getMiterLimit","defaultMiterLimit","createStroke","applyPixelRatio","createFill","currentFillStyle","applyStroke","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","width_","declutterMode_","declutterImageWithText_","myBegin","reverseHitDetectionInstructions","sharedData","getAnchor","getPixelRatio","getHitDetectionImage","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","moveToLineToInstruction","updateStrokeStyle","drawFlatCoordinates_","lastStroke","CanvasPolygonBuilder","numEnds","setFillStrokeStyles_","circleInstruction","drawFlatCoordinatess_","updateFillStyle","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg","keep","saveTextStates_","setFillStrokeStyle","defaultPadding","p0","p1","p2","p3","flatEnd","flatOffset","oo","range","drawChars_","strokeKey","textKey","defaultTextAlign","defaultTextBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","defaultFont","registerFont","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","finish","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","replace","iStart","charLength","chars","substring","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","textIsArray","chunks","reduce","getTextDimensions","widths","heights","lineWidths","renderWidth","contextInstructions","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","setStrokeStyle_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","contextScale","imageOrLabel","dimensions","box","strokePadding","replayTextBackground_","drawImageOrLabel","repeatSize","setLineDash","createLabel","featureCallback","hitExtent","pixelCoordinates","transformSetFromArray","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","arc","closePath","labelWithAnchor","drawLabelWithPointPlacement_","widthIndex","calculateImageOrLabelDimensions_","imageArgs","imageDeclutterBox","replayImageOrLabel_","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","execute_","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","willReadFrequently","indexes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","idx","executor","executeHitDetection","builderTypes","execute","CanvasImmediateRenderer","userTransform","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","localTransform","setTransform","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","close","moveToLineTo_","drawText_","setImageStyle","setTextStyle","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawCircle","getGeometryFunction","drawGeometry","geometries","getGeometriesArray","simplifyTransformed","drawImages_","flatMidpoint","geometryExtent","flatMidpoints","drawRings_","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","getImageState","ImageState","imageBuilderGroup","imageReplay","getBuilder","textBuilderGroup","textReplay","drawText","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","imageState","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","drawCustom","getHitDetectionRenderer","getGeometries","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","executorGroup","vectorSource","endWorld","world","getRenderTransform","compositionContext","setupCompositionContext_","renderWorlds","releaseCompositionContext_","makeScale","transformToString","clipped","intersectsExtent","transforms","styleFunction","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","padStart","originalStyle","setColor","setText","getImageSize","imgContext","setImage","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","executorGroups","item","renderIfReadyAndVisible","animating","interacting","getUpdateWhileAnimating","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","getDeclutter","userExtent","loadFeatures","toUserResolution","getTransformFromProjections","getSquaredRenderTolerance","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","decimals","Projection","code_","units_","units","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","EPSG4326Projection","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","pointResolution","getter","getPointResolutionFunc","projUnits","vertices","addEquivalentProjections","projections","addProjections","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","transformExtent","destProjection","sourceUnits","userUnits","projections2","forwardTransform","inverseTransform","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","addCommon","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","measureFont","measureContext","textHeights","interval","referenceWidth","referenceFonts","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","getKeys","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","curr","baseStyle","currentWidth","currentHeight","labelOrImage","executeLabelInstructions","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","forEachLoadedTile","pixelContext","pixelContext_","err","layerClassName","getClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","brokenDiagonalRendering_","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","addTriangle_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","renderEdges","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","ud","vd","step","steps","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","reproject_","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","entry","value_","key_","newer","older","containsKey","getKeyZXY","TileCache","release","peekLast","fromKey","peekFirstKey","tmpTileCoord","TileGrid","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","getForProjection","getDefaultTileGrid","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","setDefaultTileGrid","DEFAULT_MAX_ZOOM","half","TileSource","attributionsCollapsible","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","getResolutions","scaleSize","getFullTileRange","withinExtentAndZ","Source","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","defaultTileLoadFunction","imageTile","OSM","url","reprojectionErrorThreshold","XYZ","xyzOptions","gridOptions","createXYZ","tileUrlFunction","urls","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","getTileInternal","newTile","refreshInterimChain","createTile_","tilegrid","proj","UrlTile","generateTileUrlFunction_","setUrls","setUrl","tileLoadingKeys_","TileEventType","pruneExceptNewestZ","setKey","startCharCode","stopCharCode","stop","expandUrl","setTileUrlFunction","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","reject","attributionLike","maxEntries","rbush_","RBush_","items_","extents","items","bbox","forEach_","getAll","getInExtent","rbush","withCredentials","xhr","format","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","VectorSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","addFeature","removeFeature","fast","featureId","removeFeatureInternal","clearEvent","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureAtCoordinateDirect","concat","anExtent","closestFeature","previousMinSquaredDistance","minDistance","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","setLoader","CircleStyle","getRadius","getDisplacement","setOpacity","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","dispatchChangeEvent_","initializeImage_","replaceColor_","isTainted_","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","imgSize_","iconImage_","iconImage","getIconImage","offset_","offsetOrigin_","offsetOrigin","updateScaleFromWidthAndHeight","getSrc","iconImageSize","widthScale","heightScale","ImageStyle","IconImageCache","cache_","cacheSize_","maxCacheSize_","maxCacheSize","expire","shared","displacement_","hitDetectionCanvas_","radius2_","renderOptions_","getPoints","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","calculateLineJoinSize_","maxRadius","createRenderOptions","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","toFunction","defaultStyles","transformStringDiv","setFromArray","transform1","transform2","compose","det","transformString","uidCounter_","ol_uid"],"sourceRoot":""}